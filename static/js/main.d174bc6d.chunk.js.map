{"version":3,"sources":["fbase.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","refreshUser","userObj","history","useHistory","useState","displayName","newDisplayName","setNewDisplayName","onSubmit","event","a","preventDefault","updateProfile","className","onChange","value","target","type","autoFocus","placeholder","style","marginTop","onClick","signOut","push","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","required","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","data","console","log","icon","faTwitter","color","size","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","class","faTrash","faPencilAlt","NweetFactory","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d174bc6d.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default ({ refreshUser, userObj }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName,\r\n            })\r\n        }\r\n        refreshUser();\r\n    };\r\n    return (\r\n            <div className=\"container\">\r\n                <form onSubmit={onSubmit} className=\"profileForm\">\r\n                    <input\r\n                        onChange={onChange}\r\n                        type=\"text\"\r\n                        autoFocus\r\n                        placeholder=\"Dispaly Name\"\r\n                        value={newDisplayName}\r\n                        className=\"formInput\"\r\n                    />\r\n                    <input\r\n                        type=\"submit\"\r\n                        value=\"Update Profile\"\r\n                        className=\"formBtn\"\r\n                        style={{\r\n                            marginTop: 10,\r\n                        }}\r\n                    />\r\n                </form>\r\n                <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                    Log Out\r\n                </span>\r\n            </div>\r\n    );\r\n};","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { name, value },\r\n        } = event;\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if (newAccount) {\r\n                data = await authService.createUserWithEmailAndPassword(\r\n                    email,\r\n                    password\r\n                );\r\n            } else {\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    required\r\n                    value={email}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    required\r\n                    value={password}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    className=\"authInput authSubmit\"\r\n                    value={newAccount ? \"Create Account\" : \"Sign In\"} />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\" >{newAccount ? \"Sign in\" : \"Create account\"}</span>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuthForm;","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    };\r\n    const data = await authService.signInWithPopup(provider);\r\n    console.log(data);\r\n  };\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you wnat to delte this nweet?\");\r\n        if (ok) {\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text: newNweet,\r\n        });\r\n        setEditing(false);\r\n    };\r\n    const onChange = (event) => {\r\n        const { target: { value },\r\n        } = event;\r\n        setNewNweet(value);\r\n    };\r\n    return (\r\n        <div className=\"nweet\">\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Edit your nweet\"\r\n                            value={newNweet}\r\n                            required\r\n                            autoFocus\r\n                            onChange={onChange}\r\n                            className=\"formInput\"\r\n                        />\r\n                        <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n                    </form>\r\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                        Cancel\r\n                     </span>\r\n                </>\r\n            ) : (\r\n                    <>\r\n                        <h4>{nweetObj.text}</h4>\r\n                        {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n                        {isOwner && (\r\n                            <div class=\"nweet__actions\">\r\n                                <span onClick={onDeleteClick}>\r\n                                    <FontAwesomeIcon icon={faTrash} />\r\n                                </span>\r\n                                <span onClick={toggleEditing}>\r\n                                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                                </span>\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                )}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Nweet;","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n//craate nweet\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        if (nweet === \"\") {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if (attachment !== \"\") {\r\n            const attachmentRef = storageService\r\n                .ref()\r\n                .child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        };\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNweet(value);\r\n    };\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: { files },\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result },\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    className=\"factoryInput__input\"\r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input\r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }}\r\n            />\r\n            {attachment &&\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img\r\n                        src={attachment}\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }}\r\n                    />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default NweetFactory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { dbService } from \"fbase\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [nweets, setNweets] = useState([]);\r\n    useEffect(() => {\r\n        dbService.collection(\"nweets\").onSnapshot(snapshot => {\r\n            const nweetArray = snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n            }));\r\n            setNweets(nweetArray);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n        <NweetFactory userObj={userObj} />\r\n        <div style={{ marginTop: 30 }}>\r\n                {nweets.map((nweet) => (\r\n                    <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Home;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n            <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n            </Link>\r\n        </li>\r\n        <li>\r\n            <Link\r\n                to=\"/profile\"\r\n                style={{\r\n                    marginLeft: 10,\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    fontSize: 12,\r\n                }}\r\n            >\r\n                <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                <span style={{ marginTop: 10 }}>\r\n                    {userObj.displayName\r\n                        ? `${userObj.displayName}의 Profile`\r\n                        : \"Profile\"}\r\n                </span>\r\n            </Link>\r\n        </li>\r\n    </ul>\r\n</nav>\r\nexport default Navigation;","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Profile from \"routes/Profile\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <div\r\n                        style={{\r\n                            maxWidth: 890,\r\n                            width: \"100%\",\r\n                            margin: \"0 auto\",\r\n                            marginTop: 80,\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                        </Route>\r\n                    </div>\r\n                ) : (\r\n                        <>\r\n                            <Route exact path=\"/\">\r\n                                <Auth />\r\n                            </Route>\r\n                        </>\r\n                    )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\nexport default AppRouter;","import React, { useEffect, useState } from \"react\";\r\nimport AppRouter from \"components/Router\";\r\nimport { authService } from \"fbase\";\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n  const [userObj, setUserObj] = useState(null);\r\n  useEffect(() => {\r\n    authService.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        setUserObj({\r\n          displayName: user.displayName,\r\n          uid: user.uid,\r\n          updateProfile: (args) => user.updateProfile(args),\r\n        });\r\n      } else {\r\n        setUserObj(null);\r\n      }\r\n      setInit(true);\r\n    });\r\n  }, []);\r\n  const refreshUser = () => {\r\n    const user = authService.currentUser;\r\n    setUserObj({\r\n      displayName: user.displayName,\r\n      uid: user.uid,\r\n      updateProfile: (args) => user.updateProfile(args),\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      {init ? (\r\n        <AppRouter\r\n          refreshUser={refreshUser}\r\n          isLoggedIn={Boolean(userObj)}\r\n          userObj={userObj}\r\n        />\r\n      ) : (\r\n          \"Initialiging...\")}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport \"./styles.css\";\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}